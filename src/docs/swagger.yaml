definitions:
  main.Todo:
    properties:
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /todos:
    get:
      description: Returns list of all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Add a new todo item
      parameters:
      - description: New Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Remove a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete todo by ID
      tags:
      - todos
    get:
      description: Returns a single todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get todo by ID
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update an existing todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update todo by ID
      tags:
      - todos
swagger: "2.0"
